[{"title":"git入门","date":"2017-08-21T08:54:15.000Z","path":"2017/08/21/git入门/","text":"关于git的简单应用… 安装省略… 配置 # 邮箱地址填注册git时用的邮箱，然后按3个回车。 -t rsa -C \"您的邮箱地址\"```1234 &gt; &lt;font color=&quot;#800&quot;&gt;# 在```github```里添加公钥信任，查看公钥内容：&lt;/font&gt;&gt; ```cat ~/.ssh/id_rsa.pub 应用1. 创建仓库在respository```创建仓库。1234567![image](http://omwnvazh9.bkt.clouddn.com/1.png)#### 2. 克隆仓库创建完毕后通过```git clone```命令来克隆此项目，如：```git clone git@github.com:champShen2016/test.git 3. 创建分支a. 创建本地分支 checkout -b branch_name```12345678该命令可以分成以下两个命令：&gt; ```git branch branch_name``` &lt;font color=&quot;#800&quot;&gt;# 表示在当前分支建立另一个新的分支，相当于复制了一份当前分支&lt;/font&gt;&gt; ```git checkout branch_name``` &lt;font color=&quot;#800&quot;&gt;# 切换到该分支&lt;/font&gt;##### b. 创建远程分支，对应本地分支```git push --set-upstream origin branch_name 注：第一次推送需执行此代码，以后只需执行push```12## 常用命令 git config –global user.name “champShen” # 设置提交代码时使用的名称 git config –global alias.co checkout # 配置checkout的别名 git config -l # 列出所有配置 git add . # 将所有修改过的工作文件提交本地暂存区 git commit -m ‘some comments’ git commit -am ‘some comments’ #将git add 与 git commit -m结合在一起使用 git reset –hard # 恢复最近一次提交过的状态(从暂存区恢复到工作文件)，即放弃上次提交后的所有本次修改 git push # 推送到远程分支 git checkout filename # 放弃文件修改 git checkout branch_name # 切换到某个分支 git checkout -b branch_name # 创建分支并切换过去 git checkout -b branch_name branch # 基于branch分支创建branch_name分支并切换过去 git branch -D branch_name # 删除分支 git push origin :remote_branch_name # 删除远程remote_branch_name分支 git merge branch_name # 将branch_name分支合并到当前分支 git stash # 暂存 git stash pop # 删除暂存 git stash list # 列出所有暂存内容 git status # 查看状态 git log # 查看提交信息 ```","tags":[{"name":"git","slug":"git","permalink":"https://champshen2016.github.io/champShen.github.io/tags/git/"}]},{"title":"Hello World","date":"2017-03-16T08:24:37.000Z","path":"2017/03/16/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]